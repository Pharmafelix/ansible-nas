---
- name: Create Photoprism Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ photoprism_data_directory }}/photoprism" 
    - "{{ photoprism_data_directory }}/storage" 

- name: Create a photoprism network
  docker_network:
    name: photoprism_network

- name: Make sure the PhotoPrism MariaDB container is created and running
  docker_container:
    name: "photoprism-mariadb"
    image: "mariadb:latest"
    pull: yes
    networks:
      - name: photoprism_network
    command: "mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120"
    state: 'started'
    env:
      "TZ": "{{ ansible_nas_timezone }}"
      "MYSQL_ROOT_PASSWORD": "{{ photoprism_MYSQL_ROOT_PASSWORD }}"
      "MYSQL_DATABASE": "photoprism_DB"
      "MYSQL_USER": "photoprism_user" 
      "MYSQL_PASSWORD": "{{ photoprism_MYSQL_PASSWORD }}"
    volumes:
      - "{{ docker_home }}/photoprism/mariadb/mysql:/var/lib/mysql"
    restart_policy: unless-stopped
    

- name: Make sure the Photoprism container is created and running
  docker_container:
    name: "photoprism"
    image: photoprism/photoprism:latest
    ports:
      - 2342:2342
    networks:
      - name: photoprism_network
    pull: yes
    security_opts:
      - seccomp:unconfined
      - apparmor:unconfined
    state: 'started'
    shm_size: 2G
    env:
      "PUID": "0"   #maybe change it to 1000 after initialization needs testing
      "PGID": "0"   #maybe change it to 1000 after initialization needs testing
      "PHOTOPRISM_GID": "0"   #maybe change it to 1000 after initialization needs testing
      "PHOTOPRISM_UID": "0"   #maybe change it to 1000 after initialization needs testing
      "TZ": "{{ ansible_nas_timezone }}"
      "PHOTOPRISM_ADMIN_PASSWORD": "{{ photoprism_PHOTOPRISM_ADMIN_PASSWORD }}"   #add variables
      "PHOTOPRISM_SITE_URL": "https://photoprism.{{ ansible_nas_domain }}"
      "PHOTOPRISM_EXPERIMENTAL": "false"
      "PHOTOPRISM_HTTP_HOST": "0.0.0.0"
      "PHOTOPRISM_HTTP_PORT": "2342"
      "PHOTOPRISM_HTTP_COMPRESSION": "gzip"
      "PHOTOPRISM_DATABASE_DRIVER": "mysql"
      "PHOTOPRISM_DATABASE_SERVER": "photoprism-mariadb:3306"
      "PHOTOPRISM_DATABASE_NAME": "photoprism_DB"
      "PHOTOPRISM_DATABASE_USER": "photoprism_user"
      "PHOTOPRISM_DATABASE_PASSWORD": "{{ photoprism_MYSQL_PASSWORD }}"
      "PHOTOPRISM_DISABLE_CHOWN": "false"              
      "PHOTOPRISM_DISABLE_BACKUPS": "true"            
      "PHOTOPRISM_DISABLE_WEBDAV": "true"             
      "PHOTOPRISM_DETECT_NSFW": "false"
      "PHOTOPRISM_UPLOAD_NSFW": "true"
      "PHOTOPRISM_THUMB_FILTER": "lanczos"
      "PHOTOPRISM_THUMB_UNCACHED": "true"
      "PHOTOPRISM_THUMB_SIZE": "2048"
      "PHOTOPRISM_THUMB_SIZE_UNCACHED": "7680"           
      "PHOTOPRISM_JPEG_SIZE": "7680" 
      "PHOTOPRISM_JPEG_QUALITY": "92"
      "TF_CPP_MIN_LOG_LEVEL": "0" 
      "PHOTOPRISM_FFMPEG_ENCODER": "h264_qsv"
      "PHOTOPRISM_FFMPEG_BUFFER": "64"
      "PHOTOPRISM_INIT": "intel-graphics tensorflow-amd64-avx2" 
    working_dir: "/photoprism"
    devices:
      - "/dev/dri/renderD128:/dev/dri/renderD128"
      - "/dev/dri:/dev/dri"
    volumes:
      - "{{ photoprism_data_directory }}/photoprism:/photoprism/originals:rw"
      - "{{ photoprism_data_directory }}/storage:/photoprism/storage:rw"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ photoprism_available_externally | string }}"
      traefik.http.routers.photoprism.rule: "Host(`photoprism.{{ ansible_nas_domain }}`)"
      traefik.http.routers.photoprism.tls.certresolver: "letsencrypt"
      traefik.http.routers.photoprism.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.photoprism.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.photoprism.loadbalancer.server.port: "2342"

- name: Schedule a library scan at 1 AM every day
  cron:
    name: Scan the PhotoPrism library
    hour: "1"
    minute: "0"
    job: "/usr/bin/docker exec photoprism /photoprism/bin/photoprism index"